plugins {
    id "io.franzbecker.gradle-lombok" version "3.2.0"
    id 'io.qameta.allure' version '2.8.1'
    id 'java'
    id 'java-library'
    id 'idea'
    id 'eclipse'
    id "com.commercehub.cucumber-jvm" version "0.14"
}

allure {
    autoconfigure = true
    aspectjweaver = true
    version = '2.13.0'
    configuration = 'compile'
    aspectjVersion = '1.9.1'

    useJUnit5 {
        version = '2.13.0'
    }
}

group = 'com.lykke.tests'
version '1.0'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

wrapper.gradleVersion = '5.6.4'

repositories {
    flatDir {
        dirs 'libs'
    }
    jcenter()
    mavenCentral()
    google()
    maven {
        url "https://maven.google.com/"
    }
}

ext {
    versions = [
            junit_jupiter   : '5.5.2',
            junit_platform  : '1.5.2',
            junit_vintage   : '5.5.2',
            jackson_core    : '2.10.0',
            jackson_databind: '2.10.0',
            jackson_datatype: '2.10.0',
            lombok          : '1.18.10',
            web3j           : '4.5.5',
            cucumber        : '4.8.0'
    ]
}

dependencies {

    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile fileTree(include: ['*.jar'], dir: 'libs')
    runtime fileTree(include: ['*.jar'], dir: 'libs')
    testRuntime fileTree(include: ['*.jar'], dir: 'libs')

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${versions.junit_jupiter}"
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "${versions.junit_jupiter}"
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: "${versions.junit_jupiter}"
    testCompile group: 'org.junit.platform', name: 'junit-platform-runner', version: "${versions.junit_platform}"
    testCompile group: 'org.junit.platform', name: 'junit-platform-suite-api', version: "${versions.junit_platform}"

    testCompile group: 'org.junit.vintage', name: 'junit-vintage-engine', version: "${versions.junit_vintage}"
    testCompile group: 'org.junit.platform', name: 'junit-platform-surefire-provider', version: '1.3.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter', version: "${versions.junit_jupiter}"
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-migrationsupport', version: "${versions.junit_jupiter}"

    compile group: 'org.hamcrest', name: 'hamcrest', version: '2.1'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '2.1'
    compile group: 'org.awaitility', name: 'awaitility', version: '3.1.6'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${versions.jackson_databind}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${versions.jackson_core}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "${versions.jackson_core}"
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version: "${versions.jackson_core}"
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: "${versions.jackson_datatype}"
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: "${versions.jackson_datatype}"

    compile group: 'io.rest-assured', name: 'rest-assured', version: '4.1.2'
    compile group: 'io.qameta.allure', name: 'allure-rest-assured', version: '2.13.0'

    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'

    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    compile group: 'ru.yandex.qatools.ashot', name: 'ashot', version: '1.5.4'
    compile group: 'cglib', name: 'cglib-nodep', version: '2.2'
    compile 'com.codeborne:selenide:5.2.2'

    compile group: 'com.github.javafaker', name: 'javafaker', version: '1.0.1'
    compile 'com.rabbitmq:amqp-client:5.7.1'

    compile "org.web3j:core:${versions.web3j}"
    compile "org.web3j:crypto:${versions.web3j}"
    compile "org.web3j:utils:${versions.web3j}"

    compile group: 'com.google.firebase', name: 'firebase-auth', version: '19.1.0'
    compile group: 'com.google.firebase', name: 'firebase-common', version: '19.3.0'
    compile group: 'com.google.firebase', name: 'firebase-config', version: '19.0.3'

    testImplementation "io.cucumber:cucumber-java8:${versions.cucumber}"
    testImplementation "io.cucumber:cucumber-junit:${versions.cucumber}"
    testImplementation "io.cucumber:cucumber-picocontainer:${versions.cucumber}";

    compile group: 'io.cucumber', name: 'cucumber-java8', version: "${versions.cucumber}"
    compile group: 'io.cucumber', name: 'cucumber-java', version: "${versions.cucumber}"
    compile group: 'io.cucumber', name: 'cucumber-core', version: "${versions.cucumber}"
    testCompile group: 'io.cucumber', name: 'cucumber-junit', version: "${versions.cucumber}"
    compile group: 'io.cucumber', name: 'cucumber-picocontainer', version: "${versions.cucumber}"
    compile group: 'io.cucumber', name: 'cucumber-expressions', version: '8.2.1'
    compile group: 'io.cucumber', name: 'tag-expressions', version: '2.0.2'

}

task smokeTest(type: Test) {
    group 'Verification'
    description 'Runs Smoke tests'

    useJUnitPlatform {
        includeTags 'smoke'
    }
    check.dependsOn it
}

task regressionTest(type: Test) {
    group 'Verification'
    description 'Runs all Regression tests'
    useJUnitPlatform {
        excludeTags 'smoke'
    }
    shouldRunAfter smokeTest
}

task apiTest(type: Test) {
    group 'Verification'
    description 'Runs all API tests'
    useJUnitPlatform()
    filter {
        includeTestsMatching "com.lykke.tests.api*"
    }
}

task isAliveTest(type: Test) {
    group 'Verification'
    description 'Runs isAlive tests'

    useJUnitPlatform()
    filter {
        includeTestsMatching "com.lykke.tests.suites.isalive*"
    }
}

task signInTest(type: Test) {
    group 'Verification'
    description 'Runs SignIn tests'

    useJUnitPlatform()
    filter {
        includeTestsMatching "SignInThrottlingTests"
    }
}

task customTest(type: Test) {
    group 'Verification'
    description 'Runs isAlive tests'

    useJUnitPlatform()
    filter {
        includeTestsMatching "com.lykke.tests.api.service.crosschainwallet*"
    }
}

task cucumberTest(type: Test) {
    group 'Verification'
    description 'Runs E2E Cucumber tests'

    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            //    classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            classpath = sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'com.lykke.tests.e2e', 'src/test/resources']

        }
    }
}

defaultTasks 'clean',
        'compileJava', 'compileTestJava',
        'checkstyleMain', 'checkstyleTest',
        'assemble'